public class SinglyLinkedList {
   private ListNode head;
   private static class ListNode {
      private int data; 
      private ListNode next; 

      public ListNode(int data) {
         this.data = data;
         this.next = null;
      }
   }
public void insertFirst(int value) {
      ListNode newNode = new ListNode(value);
      newNode.next = head;
      head = newNode;
   }
   public void display() {
      ListNode current = head;
      while (current != null) {
         System.out.print(current.data + " --> ");
         current = current.next;
      }
      System.out.print("null");
      System.out.println();
   }
 public static ListNode merge(ListNode a, ListNode b) {
      ListNode dummy = new ListNode(0);
      ListNode tail = dummy;
      while (a != null && b != null) {
         if (a.data <= b.data) {
            tail.next = a;
            a = a.next;
         } else {
            tail.next = b;
            b = b.next;
         }
         tail = tail.next;
      }
      if (a == null) {
         tail.next = b;
      } else {
         tail.next = a;
      }

      return dummy.next;
   }
public static void main(String[] args) {
      SinglyLinkedList sll1 = new SinglyLinkedList();
      sll1.insertFirst(1);
      sll1.insertFirst(4);
      sll1.insertFirst(8);
      SinglyLinkedList sll2 = new SinglyLinkedList();
      sll2.insertFirst(1);
      sll2.insertFirst(4);
      sll2.insertFirst(8);
SinglyLinkedList singlyLinkedList=new SinglyLinkedList();
 SinglyLinkedList result = new SinglyLinkedList();
      result.head = merge(sll1.head, sll2.head);
singlyLinkedList.display(head);
}
}
